import time
import machine
from machine import Pin
from time import sleep
from stepMotor import StepMotor
from display import Display
from infrared import Infrared
from button import Button
from led import Led
from buzzer import * # include anche le note e le melodie definite
from connectionBrokerMQTT import MQTT_manager
from boot import WiFiConnector
from umqtt.simple import MQTTClient

#-----------------------------------------------------------------------
# INIZIALIZZAZIONE SENSORI E ATTUATORI DELLA SCHEDA
print('\nINIZIALIZZAZIONE SENSORI E ATTUATORI DELLA SCHEDA')
# display
display = Display(22,21)
anemone = bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfc\x3f\xf8\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xfe\x3f\xfb\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xfe\x7f\xe7\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xfe\x7f\xcf\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xfe\x3f\x9f\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf9\xff\x3f\x3f\xf1\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xfe\xff\x9f\x3f\x1f\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x03\xff\x3f\xcf\x7c\xff\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x03\xff\xcf\xe6\x33\xff\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x03\xff\xf1\xe3\xc3\xff\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x0f\xf0\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3f\xff\x9f\xf9\xff\xfc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xf8\x7e\x1f\xf9\xff\xff\x80\x00\x00\x00\x00\x00\x00\x00\x00\x03\xff\xff\xcf\xf3\x1f\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x03\xff\xff\xc0\x07\xf3\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x03\xff\xff\x3c\xf3\xfc\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x01\xff\xfc\xfc\xf9\xff\x3f\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xc7\xfc\xfc\xff\x8e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xff\xf9\xfc\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xff\xf3\xfe\x7f\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xff\xe7\xfe\xff\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xff\xdf\xfe\x7f\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xff\x1f\xfc\x3f\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x80\xc0\xe3\xfc\x70\x0c\x07\x80\xe0\x63\xfe\x00\x00\x00\x00\x07\xc1\xf0\xe7\xfc\x78\x3c\x3f\xf8\xf0\xf3\xfe\x00\x00\x00\x00\x0f\xc1\xf8\xe7\x80\x7c\x7c\x78\x7c\xfc\xf3\x80\x00\x00\x00\x00\x1e\xe1\xfc\xe7\xfc\x7e\xfc\xf0\x1c\xfe\xf3\xfc\x00\x00\x00\x00\x1c\xf1\xdf\xe7\xfc\x77\xfc\xe0\x1c\xef\xf3\xfc\x00\x00\x00\x00\x3f\xf9\xc7\xe7\x80\x73\x9c\xf8\x3c\xe3\xf3\x80\x00\x00\x00\x00\x7e\xb9\xc3\xe7\xfc\x71\x1c\x7f\xf8\xe1\xf3\xfe\x00\x00\x00\x00\x70\x1d\xc0\xe7\xfc\x70\x1c\x0f\xe0\xe0\xf3\xfe\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
display.show_image(anemone)

# stepper motor
step_motor = StepMotor(26,25,33,32)

# buzzer
buzzer = Buzzer(14, duty=512)
buzzer.stop()

# infrarosso
ir = Infrared(15)

# led
led = Led(17)
led.off()

# pulsante per tornare alla posizione standard (home)
def on_return_button():
    step_motor.return_to_home()

button_home = Button(16, on_return_button)

# pulsante di reset
print('\nSETTAGGIO BOTTONE DI RESET')
def on_reset_button():
    display.clear()
    display.show_text("Reset in corso...")
    mqtt_manager.publish_on_topic(topic_pub,"Reset in corso")
    step_motor.return_to_home()
    machine.reset()

button_reset = Button(4, on_reset_button)

print('oggetti istanziati correttamente')

#-----------------------------------------------------------------------
# CONNESSIONE AL BROKER MQTT
print('\nCONNESSIONE AL BROKER MQTT')
mqtt_manager = MQTT_manager(mqtt_server="broker.hivemq.com")
mqtt_manager.connect_to_MQTT_broker()

#-----------------------------------------------------------------------
# SETTAGGIO DELLA FUNZIONE DI CALLBACK
print('\nSETTAGGIO DELLA CALLBACK')
def callback_function(topic, msg):
    msg = msg.decode()
    print("Messaggio ricevuto:", topic, msg)  #debug per vedere l'esecuzione correta delle azioni
    if topic == topic_sub :
        step_motor.return_to_home()
        giorno,fascia = msg.split("|")
        led.on()
        display.show_text("Attendi...")
        step_motor.rotate_by_day(giorno,fascia)
        mqtt_manager.publish_on_topic(topic_pub,"Promemoria: Ã¨ ora di prendere la pillola")
        print("Messaggio all'utente inviato") #debug per vedere l'esecuzione correta delle azioni 
        display.show_text("Preleva pillola")
        buzzer.play(MELODY, wait=200)

mqtt_manager.set_callback(callback_function)

#-----------------------------------------------------------------------
# SOTTOSCRIZIONE AI TOPIC
print('\nSOTTOSCRIZIONE AI TOPIC')
topic_pub = b"dispenser/receivedPill"  # topic dove l'ESP pubblica lo stato (presa medicina)
topic_sub = b"dispenser/pillDelivery"  # topic dove l'ESP pubblica la consegna della pillola
mqtt_manager.subscribe_to_topic(topic_pub)
mqtt_manager.subscribe_to_topic(topic_sub)

#-----------------------------------------------------------------------
# LOOP PRINCIPALE
while True:
    mqtt_manager.check_messages_from_topics() # Controlla se ci sono nuovi messaggi dai topic sottoscritti e chiama la callback ad ogni messaggio ricevuto
    if ir.value() == 0: #da controllare
        mqtt_manager.publish_on_topic(topic_pub,"L'utente ha correttamente prelevato la pillola") # messaggio da cabmiare, inviato all'user su interfaccia
        print("Pillola correttamente prelvata")
        display.show_text("Pillola prelevata") # da aggiustare frase
        sleep(30)
        mqtt_manager.publish_on_topic(topic_pub,"Ritorno in posizione di start")
        display.show_text("Ritorno in posizione di start") # da aggiustare frase
        step_motor.return_to_home()
        print("Ritornato in posizione di start")